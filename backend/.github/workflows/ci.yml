name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout working branch
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python 3.12
      run: uv python install 3.12
    
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-
    
    - name: Set environment variables
      run: |
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
        echo "POSTGRES_DB=app" >> $GITHUB_ENV
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_USER=user" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=password" >> $GITHUB_ENV
        echo "PROJECT_NAME=PracticePython" >> $GITHUB_ENV
        echo "FIRST_USERNAME=testuser" >> $GITHUB_ENV
        echo "FIRST_PASSWORD=testpassword123" >> $GITHUB_ENV
        echo "SECRET_KEY=test_secret_key_32_characters_long_for_testing" >> $GITHUB_ENV
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV
        echo "REDIS_HOST=localhost" >> $GITHUB_ENV
        echo "REDIS_PORT=6379" >> $GITHUB_ENV
        echo "ENVIRONMENT=testing" >> $GITHUB_ENV
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run ruff linter
      run: uv run ruff check .
    
    - name: Run ruff formatter
      run: uv run ruff format --check .
    
    - name: Run mypy type checker
      run: uv run mypy app/
    
    - name: Database migrations
      run: uv run alembic upgrade head
    
    - name: Run tests with coverage
      run: uv run pytest --cov=app --cov-report=term-missing:skip-covered --cov-report=html --cov-fail-under=50 